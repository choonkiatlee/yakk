name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build-linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
    
    - name: Restore Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod              # Module download cache
          ~/.cache/go-build         # Build cache (Linux)
          ~/Library/Caches/go-build # Build cache (Mac)
          '%LocalAppData%\go-build' # Build cache (Windows)
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Prepare artifact folder
      run: |
        mkdir ./bin
        mkdir ./bin/yakk
        mkdir ./bin/yakkserver

    - name: Build Linux AMD 64
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -o ./bin/linux-386/yakk -v ./cmd/yakk/.
        CGO_ENABLED=0 GOOS=linux GOARCH=386 go build -o ./bin/linux-386/yakkserver -v ./cmd/yakkserver/.

        cd bin; zip -rm ../bin/yakk/yakk-linux-386.zip ./linux-386/yakk; cd ..
        cd bin; zip -rm ../bin/yakkserver/yakkserver-linux-386.zip ./linux-386/yakkserver; cd ..

    - name: Build Linux AMD 64
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./bin/linux-amd64/yakk -v ./cmd/yakk/.
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./bin/linux-amd64/yakkserver -v ./cmd/yakkserver/.

        cd bin; zip -rm ../bin/yakk/yakk-linux-amd64.zip ./linux-amd64/yakk; cd ..
        cd bin; zip -rm ../bin/yakkserver/yakkserver-linux-amd64.zip ./linux-amd64/yakkserver; cd ..

    - name: Build Linux ARM
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -o ./bin/linux-arm/yakk -v ./cmd/yakk/.
        CGO_ENABLED=0 GOOS=linux GOARCH=arm go build -o ./bin/linux-arm/yakkserver -v ./cmd/yakkserver/.

        cd bin; zip -rm ../bin/yakk/yakk-linux-arm.zip ./linux-arm/yakk; cd ..
        cd bin; zip -rm ../bin/yakkserver/yakkserver-linux-arm.zip ./linux-arm/yakkserver; cd ..

    - name: Build Linux ARM 64
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ./bin/linux-arm64/yakk -v ./cmd/yakk/.
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ./bin/linux-arm64/yakkserver -v ./cmd/yakkserver/.

        cd bin; zip -rm ../bin/yakk/yakk-linux-arm64.zip ./linux-arm64/yakk; cd ..
        cd bin; zip -rm ../bin/yakkserver/yakkserver-linux-arm64.zip ./linux-arm64/yakkserver; cd ..

    - name: Build Windows x86
      run: |
        CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o ./bin/windows-386/yakk -v ./cmd/yakk/.
        CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -o ./bin/windows-386/yakkserver -v ./cmd/yakkserver/.

        cd bin; zip -rm ../bin/yakk/yakk-windows-386.zip ./windows-386/yakk; cd ..
        cd bin; zip -rm ../bin/yakkserver/yakkserver-windows-386.zip ./windows-386/yakkserver; cd ..

    - name: Build Windows amd64
      run: |
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ./bin/windows-amd64/yakk -v ./cmd/yakk/.
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ./bin/windows-amd64/yakkserver -v ./cmd/yakkserver/.

        cd bin; zip -rm ../bin/yakk/yakk-windows-amd64.zip ./windows-amd64/yakk; cd ..
        cd bin; zip -rm ../bin/yakkserver/yakkserver-windows-amd64.zip ./windows-amd64/yakkserver; cd ..

    # - name: Test
    #   run: go test -v ./...

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2.2.1
      with:
        # Artifact name
        name: artifact
        # A file, directory or wildcard pattern that describes what to upload
        path: bin

  # build-windows:
  #   name: Build Windows
  #   runs-on: windows-latest
  #   steps:

  #   - name: Set up Go 1.x
  #     uses: actions/setup-go@v2
  #     with:
  #       go-version: ^1.13

  #   - name: Check out code into the Go module directory
  #     uses: actions/checkout@v2
    
  #   - name: Restore Cache
  #     uses: actions/cache@v2
  #     with:
  #       path: |
  #         ~/go/pkg/mod              # Module download cache
  #         ~/.cache/go-build         # Build cache (Linux)
  #         ~/Library/Caches/go-build # Build cache (Mac)
  #         '%LocalAppData%\go-build' # Build cache (Windows)
  #       key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #       restore-keys: |
  #         ${{ runner.os }}-go-

  #   - name: Get dependencies
  #     run: |
  #       go get -v -t -d ./...

  #   - name: Build
  #     run: |
  #       go build -o ./bin/yakk -v ./cmd/yakk/.
  #       go build -o ./bin/yakkserver -v ./cmd/yakkserver/.

  #   # - name: Test
  #   #   run: go test -v ./...

  #   - name: Upload Build Artifact
  #     uses: actions/upload-artifact@v2.2.1
  #     with:
  #       # Artifact name
  #       name: artifact-windows
  #       # A file, directory or wildcard pattern that describes what to upload
  #       path: bin
